SET(PROJECTNAME cjet_linux_io_tests)
PROJECT(${PROJECTNAME} C CXX)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../../../../cmake/)
INCLUDE(defaults)

CONFIGURE_FILE(../config/config.h.in ${PROJECT_BINARY_DIR}/config/config.h)

FIND_PACKAGE(Boost 1.46.0 REQUIRED COMPONENTS unit_test_framework)
IF(Boost_FOUND)
  INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
  LIST(APPEND ADDITIONAL_LIBS ${Boost_LIBRARIES})
  ADD_DEFINITIONS(-DBOOST_SYSTEM_NO_DEPRECATED)
ENDIF(Boost_FOUND)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../../)
INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR}/)

SET(WARN_SWITCHES "-Wall -Werror")

SET(CMAKE_CXX_FLAGS "-pipe ${WARN_SWITCHES} -ggdb --coverage")
SET(CMAKE_C_FLAGS "-pipe -std=c99 ${WARN_SWITCHES} -ggdb --coverage")

IF(CMAKE_C_COMPILER_ID STREQUAL GNU)
	IF(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 4.8.0)
		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Og")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Og")
	ELSEIF(CMAKE_C_COMPILER_ID STREQUAL GNU)
		SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O0")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0")
	ENDIF()
ENDIF()

SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "-Wl,-O2,--gc-sections,-s")

ADD_DEFINITIONS(-DTESTING)
ADD_DEFINITIONS(-D_BSD_SOURCE=1 -D_DEFAULT_SOURCE=1)

INCLUDE(hardening)

FILE(COPY "../../../../scripts/make_coverage.sh" DESTINATION ${CMAKE_BINARY_DIR})

SET(READBUFFER_TEST
	../../../json/cJSON.c
	../../../jet_string.c
	../../../fetch.c
	../../../method.c
	../../../peer.c
	../../../response.c
	../../../router.c
	../../../state.c
	../../../uuid.c
	../io.c
	log.cpp
	readbuffer_test.cpp
)
ADD_EXECUTABLE(readbuffer_test.bin ${READBUFFER_TEST})
TARGET_LINK_LIBRARIES(
	readbuffer_test.bin
	${Boost_LIBRARIES}
)

